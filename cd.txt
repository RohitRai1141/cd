Use Case Diagram
@startuml
actor Customer
actor Admin

rectangle "Recycle Intelligence Hub" {
  Customer --> (Login)
  Admin --> (Login)
  
  Customer --> (Scan Barcode)
  Customer --> (Upload Image)
  Customer --> (Search for Recyclability Info)
  Customer --> (Locate Facilities)
  Customer --> (Track Recycling Habits)

  Admin --> (Manage Recyclability Data)
  Admin --> (Facilities Management)
  Admin --> (System Reports)
  Admin --> (User Accounts)

  (Search for Recyclability Info) ..> (Scan Barcode) : <<include>>
  (Search for Recyclability Info) ..> (Upload Image) : <<include>>
}
@enduml




✅ Exercise 4: Class Diagram (for product scanner feature)
plantuml
Copy code
@startuml
class User {
  +userID: String
  +name: String
  +email: String
  +login()
}

class Scanner {
  +scanBarcode(): String
  +uploadImage(): Image
}

class Product {
  +productID: String
  +name: String
  +recyclable: Boolean
}

class RecyclingInfo {
  +recyclabilityDetails: String
  +locationList: List
}

class Admin {
  +manageProduct()
  +manageFacility()
  +generateReports()
}

User --> Scanner
Scanner --> Product
Product --> RecyclingInfo
Admin --> Product
Admin --> RecyclingInfo
@enduml



✅ Exercise 5: Sequence Diagram (Product Scanning Flow)
plantuml
@startuml
actor User
participant App
participant Scanner
participant System
database DB

User -> App : Open App
User -> App : Scan Barcode
App -> Scanner : Capture Barcode
Scanner -> System : Send barcode data
System -> DB : Fetch product details
DB --> System : Return product data
System -> App : Send product info
App -> User : Display product info
@enduml



✅ Exercise 5: Sequence Diagram (Recycling Process Flow)
plantuml
@startuml
actor User
participant App
participant System
database DB

User -> App : Select recycling option
App -> System : Send recycling request
System -> DB : Update recycling records
DB --> System : Confirm update
System -> App : Send confirmation
App -> User : Show confirmation message
@enduml



✅ Exercise 5: Collaboration Diagram (Scanner Feature)
plantuml
@startuml
object User
object App
object Scanner
object System
object DB

User -> App : openApp()
App -> Scanner : scanBarcode()
Scanner -> System : sendBarcode()
System -> DB : fetchDetails()
DB --> System : returnDetails()
System -> App : sendInfo()
App -> User : displayInfo()
@enduml




Exercise 6: Statechart Diagram (Scanner Feature)
@startuml
[*] --> AppOpened

AppOpened --> Scanning : ScanBarcode
Scanning --> Recognizing : BarcodeDetected
Recognizing --> FetchingData : ValidCode
Recognizing --> ErrorState : InvalidCode

FetchingData --> ShowingDetails : DataFound
ErrorState --> Scanning : Retry
ShowingDetails --> [*]
@enduml




✅ Exercise 6: Activity Diagram (Scanner Workflow)
plantuml
@startuml
start

:Open App;
:Scan Barcode;

if (Scan Success?) then (yes)
  :Recognize Barcode;
  :Fetch Product Details;
  :Display Product Info;
  
  if (Recycle?) then (yes)
    :Select Option;
    :Confirm Recycle;
    :Update Records;
    :Show Confirmation;
  else (no)
    stop
  endif

else (no)
  :Show Error;
  :Retry Scan;
endif

stop
@enduml




